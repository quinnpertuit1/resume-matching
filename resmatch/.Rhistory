clean_resume_df
clean_job_df
work_exp
resume_df = clean_resume_df
resume_exp = work_exp
job_df = clean_job_df$text
experience_diff <- job_df$years_exp - resume_exp
job_dff
job_df
scored_df <- create_score_df(resume_df = clean_resume_df, resume_exp = work_exp,
job_df = clean_job_df)
scored
scored_df
experience_diff <- job_df$years_exp - resume_exp
resume_df = clean_resume_df,
resume_df = clean_resume_df
resume_exp = work_exp
job_df = clean_job_df
experience_diff <- job_df$years_exp - resume_exp
experience_weight <- gompertz(ifelse(is.na(experience_diff),0,experience_diff))
job_text_corpus <- create_text_corpus(job_df$text)
job_key_terms <- job_df$key_terms
matching_score <- 0.5 #score_function(resume_df$text, job_df$text)
key_terms_sim <- score_key_terms(job_df$key_terms, resume_df$key_terms)
final_scores <- ifelse(is.na(key_terms_sim), matching_score, matching_score/2 + key_terms_sim/2)
final_scores <- final_scores * experience_weight
score_df <- data.frame(matching_score, key_terms_sim, experience_weight, final_scores)
score_d
score_df
experience_diff <- job_df$years_exp - resume_exp
experience_weight <- gompertz(ifelse(is.na(experience_diff),0,experience_diff))
job_text_corpus <- create_text_corpus(job_df$text)
job_key_terms <- job_df$key_terms
job_key_terms
matching_score <- 0.5 #score_function(resume_df$text, job_df$text)
key_terms_sim <- score_key_terms(job_df$key_terms, resume_df$key_terms)
key_terms_sim
job_df$key_terms
resume_df$key_terms
key_terms_sim
job_df$key_terms
resume_df$key_terms
key_terms_sim <- score_key_terms(job_key_terms = job_df$key_terms,
resume_key_terms = resume_df$key_terms)
job_key_terms = job_df$key_terms
resume_key_terms = resume_df$key_terms
job_key_terms <- strsplit(job_key_terms, split = " ")
job_key_freq <- sapply(job_key_terms,function(x) log(table(x) + 1))
job_key_terms
job_key_freq <- sapply(job_key_terms,function(x) log(table(x) + 1))
job_key_freq
resume_key_terms <- unlist(strsplit(resume_key_terms, split = " "))
resume_key_terms
scores <- sapply(job_key_freq, function(key_terms) {
if(length(key_terms)[1] != 0){
total <- sum(key_terms)
matched_terms <- key_terms[names(key_terms) %in% resume_key_terms]
filter_total <- sum(matched_terms)
return(filter_total/total)
}else NA
})
scores
job_key_freq
job_key_freq
job_key_terms <- strsplit(job_key_terms, split = " ")
job_key_freq <- sapply(job_key_terms,function(x) log(table(x) + 1))
resume_key_terms <- unlist(strsplit(resume_key_terms, split = " "))
if(length(key_terms)[1] != 0){
total <- sum(key_terms)
matched_terms <- key_terms[names(key_terms) %in% resume_key_terms]
filter_total <- sum(matched_terms)
score <- (filter_total/total)
}else{
score <- NA
}
job_key_freq
total <- sum(job_key_freq)
total
total <- sum(job_key_freq)
matched_terms <- key_terms[names(key_terms) %in% resume_key_terms]
filter_total <- sum(matched_terms)
job_key_terms
job_key_terms[[1]]
job_key_terms[1]
total <- sum(job_key_freq)
matched_terms <- key_terms[names(key_terms) %in% resume_key_terms]
filter_total <- sum(matched_terms)
score <- (filter_total/total)
total <- sum(job_key_freq)
matched_terms <- job_key_freq[names(job_key_freq) %in% resume_key_terms]
matched_terms
filter_total <- sum(matched_terms)
filter_total
score <- (filter_total/total)
score
library(resmatch)
hre
href
df <- generate_scores(resume = resume, href = href,  work_exp = 2)
create_score_df
library(resmatch)
df <- generate_scores(resume = resume, href = href,  work_exp = 2)
df
clean_job_df <- clean_text(href = href)
clean_resume_df <- clean_text(text = resume)
scored_df <- create_score_df(resume_df = clean_resume_df, resume_exp = work_exp,
job_df = clean_job_df)
scored_df
experience_diff <- job_df$years_exp - resume_exp
experience_weight <- gompertz(ifelse(is.na(experience_diff),0,experience_diff))
job_text_corpus <- create_text_corpus(job_df$text)
job_key_terms <- job_df$key_terms
matching_score <- 0.5 #score_function(resume_df$text, job_df$text)
key_terms_sim <- score_key_terms(job_key_terms = job_df$key_terms,
resume_key_terms = resume_df$key_terms)
key_terms_sim
job_key_terms <- strsplit(job_key_terms, split = " ")
job_key_freq <- sapply(job_key_terms,function(x) log(table(x) + 1))
resume_key_terms <- unlist(strsplit(resume_key_terms, split = " "))
if(length(job_key_terms)[1] != 0){
total <- sum(job_key_freq)
matched_terms <- job_key_freq[names(job_key_freq) %in% resume_key_terms]
filter_total <- sum(matched_terms)
score <- (filter_total/total)
}else{
score <- NA
}
score
score_key_terms
rm(score_key_terms)
score_key_terms(job_key_terms = job_df$key_terms,
resume_key_terms = resume_df$key_terms)
job_key_terms = job_df$key_terms
resume_key_terms = resume_df$key_terms
job_key_terms <- strsplit(job_key_terms, split = " ")
job_key_freq <- sapply(job_key_terms,function(x) log(table(x) + 1))
resume_key_terms <- unlist(strsplit(resume_key_terms, split = " "))
if(length(job_key_terms)[1] != 0){
total <- sum(job_key_freq)
matched_terms <- job_key_freq[names(job_key_freq) %in% resume_key_terms]
filter_total <- sum(matched_terms)
score <- (filter_total/total)
}else{
score <- NA
}
library(resmatch)
score_key_terms(job_key_terms = job_df$key_terms,
resume_key_terms = resume_df$key_terms)
scored_df <- create_score_df(resume_df = clean_resume_df, resume_exp = work_exp,
job_df = clean_job_df)
scored_df
df <- generate_scores(resume = resume, href = href,  work_exp = 2)
df
devtools::document()
library(resmatch)
df <- generate_scores(resume = resume, href = href,  work_exp = 2)
df <- generate_scores(resume = resume, href = href,  work_exp = 2)
library(resmatch)
df
unique_job_key_terms <- resume_df$key_terms %>% strsplit(' ') %>% unique %>% paste(collapse = ' ')
unique_resume_key_terms <- job_df$key_terms %>% strsplit(' ') %>% unique %>% paste(collapse = ' ')
unique_job_key_terms
resume_df$key_terms %>% strsplit(' ')
resume_df$key_terms %>% strsplit(' ') %>% unique
unique_job_key_terms <- resume_df$key_terms %>% strsplit(' ') %>% unlist %>%  unique %>% paste(collapse = ' ')
unique_job_key_terms
unique_resume_key_terms <- job_df$key_terms %>% strsplit(' ') %>% unlist %>% unique %>% paste(collapse = ' ')
score_df <- data.frame(final_scores, resume_key_terms = resume_df$key_terms,
job_key_terms = job_df$key_terms)
score_df
score_df <- data.frame(final_scores, resume_key_terms = unique_resume_key_terms,
job_key_terms = unique_job_key_terms)
score_df
unique_resume_key_terms
unique_job_key_terms
score_df <- data.frame(final_scores, resume_key_terms = unique_resume_key_terms,
job_key_terms = unique_job_key_terms)
score_df
final_scores
library(resmatch)
generate_scores(resume = resume, href = href,  work_exp = 2)
library(resmatch)
generate_scores(resume = resume, href = href,  work_exp = 2)
href
resume
generate_scores(resume = resume, href = href,  work_exp = 2)
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
resume
href
generate_scores(resume = resume, href = href,  work_exp = 2)
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
nPlot
install.packages('rCharts')
devtools::install_github('rCharts', 'ramnathv')
library(rCharts)
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
mtcars
p5 = nPlot(~ cyl, data = mtcars, type = 'pieChart')
p5$chart(donut = TRUE)
p5$print(include_assets=T)
p5 = nPlot(~ cyl, data = mtcars, type = 'pieChart')
p5$chart(donut = TRUE)
p5$print(include_assets=T)
p5 = nPlot(~ cyl, data = mtcars, type = 'pieChart')
p5$chart(donut = TRUE)
p5$chart()
plot(p5$chart())
print(p5$chart())
p5$print
p5$print()
mtcars %>% str
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
library(resmatch)
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
rm(df)
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
href
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
df <- generate_scores(resume = resume, href = href,  work_exp = 2)
f
df
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
df$resume_key_terms %>% strsplit(" ") %>% unlist
df$resume_key_terms
df$resume_key_terms[1]
df$resume_key_terms %>% as.character() %>% strsplit(" ") %>% unlist
data.frame('Skills' = df$resume_key_terms %>% as.character() %>% strsplit(" ") %>% unlist)
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
?renderDataTable
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
library(resmatch)
df <- generate_scores(resume = resume, href = href, work_exp = 2)
df
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
href
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
df
df$resume_exp
df$resume_key_terms %>% strsplit(' ') %>% unlist
df$resume_key_terms
df$resume_key_terms %>% as.character() %>% strsplit(' ') %>% unlist
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
df$job_key_terms %>% as.character() %>% strsplit(' ') %>% unlist
df$job_key_terms %>% as.character() %>% strsplit(' ') %>% unlist
df$resume_key_terms %>% as.character() %>% strsplit(' ') %>% unlist
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
hhref
href
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
?column
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
hre
href
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
?isolate
isolate(paste0("https://www.youtube.com/embed/",sub(".*v=(.*)","\\1",'a')))})
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
href
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
Iframe
?iframe
<-
library(shiny)
rm(list = ls())
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
fluidRow(
column(6, selectInput("Member", label=h5("Choose a option"),choices=c('BCRA1','FITM2'))
))),
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
query <- members[which(members$nr==input$Member),2]
test <<- paste0("http://news.scibite.com/scibites/news.html?q=GENE$",query)
})
output$frame <- renderUI({
input$Member
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
rm(list = ls())
library(shiny)
members <- data.frame(name=c("Name 1", "Name 2"), nr=c('BCRA1','FITM2'))
ui <- fluidPage(titlePanel("Getting Iframe"),
sidebarLayout(
sidebarPanel(
fluidRow(
column(6, selectInput("Member", label=h5("Choose a option"),choices=c('BCRA1','FITM2'))
))),
mainPanel(fluidRow(
htmlOutput("frame")
)
)
))
server <- function(input, output) {
observe({
query <- members[which(members$nr==input$Member),2]
test <<- paste0("http://news.scibite.com/scibites/news.html?q=GENE$",query)
})
output$frame <- renderUI({
input$Member
my_test <- tags$iframe(src=test, height=600, width=535)
print(my_test)
my_test
})
}
shinyApp(ui, server)
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('test')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
href
indeed_dat
indeed_data
resume
indeed_df <- call_indeed_api(search_term = 'analyst',  location = 'california',
start_point = 1)
href <- indeed_df$href
ls
href
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
df
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
df
df
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
resume
df
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
href
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
runApp('temp')
href
query = 'statistics+excel'
url <- paste0('https://www.coursera.org/courses?languages=en&query=',query)
page <- read_html(url)
page %>%
html_nodes('.headline-1-text')
library(rvest)
page %>%
html_nodes('.headline-1-text') %>%
rvest::html_text()
page %>%
html_nodes('.headline-1-text') %>%
rvest::html_attr('href')
page %>%
html_nodes('.offering-content') %>%
rvest::html_attr('href')
page %>%
html_attr('href') %>%
page %>%
html_attr('href')
page %>%
html_nodes('a') %>%
html_attr('href')
page %>%
html_nodes('offering-content.a') %>%
html_attr('href')
page %>%
html_nodes('offering-content#a') %>%
html_attr('href')
page %>%
html_nodes('offering-content') %>%
html_attr('href')
page %>%
html_nodes('a.rc-OfferingCard.nostyle') %>%
html_attr('href')
class_df <- data.frame(classes = class_names, link = hrefs)
class_names <- page %>%
html_nodes('.headline-1-text') %>%
rvest::html_text()
hrefs <- page %>%
html_nodes('a.rc-OfferingCard.nostyle') %>%
html_attr('href')
class_df <- data.frame(classes = class_names, link = hrefs)
class_df
class_names <- page %>%
html_nodes('.headline-1-text') %>%
rvest::html_text()
hrefs <- page %>%
html_nodes('a.rc-OfferingCard.nostyle') %>%
html_attr('href')
hrefs <- paste0('https://www.coursera.org/', hrefs)
class_df <- data.frame(classes = class_names, link = hrefs)
class_dff
class_df
hrefs <- paste0('https://www.coursera.org', hrefs)
hrefs <- page %>%
html_nodes('a.rc-OfferingCard.nostyle') %>%
html_attr('href')
hrefs <- paste0('https://www.coursera.org', hrefs)
class_df <- data.frame(classes = class_names, link = hrefs)
clasS_df
class_df
df <<- generate_scores(resume = resume, href = href[1], work_exp = 2)
df
df <- generate_scores(resume = resume, href = href[1], work_exp = 2)
df
missing_terms <- unique_resume_key_terms[!(unique_resume_key_terms %in% unique_job_key_terms)]
library(resmatch)
library(resmatch)
df <- generate_scores(resume = resume, href = href[1], work_exp = 2)
df
df <- generate_scores(resume = resume, href = href[1], work_exp = 2)
library(resmatch)
df
devtools::document
devtools::document()
library(resmatch)
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
href
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
runApp('/media/will/Hard Drive/wjburton/Documents/Analytics/resume-matching/shiny app')
